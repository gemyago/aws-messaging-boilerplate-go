openapi: "3.0.0"
info:
  version: 1.0.0
  title: Example Pet Store API definition
  description: |
    The definition includes some basic set of API endpoints definitions
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8080
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 100
            format: int64
        - name: offset
          in: query
          description: How many items to skip (max 100)
          required: false
          schema:
            type: integer
            minimum: 1
            format: int64
      responses:
        '200':
          description: Request succeeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PetsResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      operationId: createPet
      tags:
        - pets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '201':
          description: Request succeeded
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{petId}:
    get:
      summary: Get info for a specific pet
      operationId: getPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Request succeeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PetResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        comments:
          type: string
    PetResponse:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/Pet"
    PetsResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Pet"
    Error:
      type: object
      required:
        - code
      properties:
        code:
          format: string
        message:
          type: string